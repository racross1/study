// You are given two strings s and t.

// String t is generated by random shuffling string s and then add one more letter at a random position.

// Return the letter that was added to t.

// Example 1:

// Input: 
let s1 = "abcd"
let t1 = "abcde"
// Output: "e"
// Explanation: 'e' is the letter that was added.
// Example 2:

// Input: 
let s2 = "" 
let t2 = "y"
// Output: "y"
// Example 3:

// Input: 
let s3 = "a"
let t3 = "aa"
// Output: "a"
// Example 4:

// Input: 
let s4 = "ae" 
let t4 = "aea"
// Output: "a"
 

// Constraints:

// 0 <= s.length <= 1000
// t.length == s.length + 1
// s and t consist of lower-case English letters.



//my understanding of the below is that [single letter].charCodeAt(0) is just the way to get the char code of that single letter


var findTheDifference = function(s, t) {
    if (s.length === 0) return t;
    var letters = 'abcdefghijklmnopqrstuvwxyz';
    // console.log(`s.split(): ${s.split('')}`)
    // console.log(`s.split().map w/ charCodeAt: ${s.split('').map(e => e.charCodeAt(0))}`)
    var sSum = s.split('').map(e => e.charCodeAt(0) - 'a'.charCodeAt(0)).reduce((a, b) => a + b);
    // console.log(`sSum: ${sSum}`)
    var tSum = t.split('').map(e => e.charCodeAt(0) - 'a'.charCodeAt(0)).reduce((a, b) => a + b);
    return letters[tSum -sSum];
};




//acc i understand to be accruer. so just adding all the char codes together and getting the difference
//can get string from char code at to convert that dif into a character

var findTheDifference2 = function(s, t) {
    const sum1 = s.split('').reduce((acc, cur) => {
        console.log(cur)
        console.log(cur.charCodeAt(0))
        return acc + cur.charCodeAt(0)
    }, 0)
    const sum2 = t.split('').reduce((acc, cur) => acc + cur.charCodeAt(0), 0);
    console.log(sum1)
    console.log(sum2)
    return String.fromCharCode(sum2 - sum1);
  };

//   console.log(findTheDifference2(s1,t1))

//my attempt after a while of not having looked at problem
  var findTheDifferenceTry2 = function(s, t) {
    let arrS = s.split('').map((ltr, idx) => {
        return s.charCodeAt(idx)
    })

    let arrT = t.split('').map((ltr, idx) => {
        return t.charCodeAt(idx)
    })
    
   let sumS = arrS.reduce((a,b) => a+b, 0)
   let sumT = arrT.reduce((a,b) => a+b, 0)


   return String.fromCharCode(sumT - sumS)
    
    };


    console.log(findTheDifference2(s1, t1))
    console.log(findTheDifferenceTry2(s1, t1))